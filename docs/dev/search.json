[{"path":"https://jpiaskowski.github.io/broom.mixed/dev/TODO.html","id":"to-do","dir":"","previous_headings":"","what":"To do","title":"NA","text":"make tidyMCMC work (issue) parameter naming general approach model components (conditional, z-, dispersion model …) parameter names checklist ability extract (1) fixef (2) var-cov pars, either scale (3) ran modes (4) ran coefs MCMCglmm ranef tidiers https://stackoverflow.com/questions/47598123/---extract-random-effects--mcmcglmm/47598440#47598440 INLA tidiers? standardize example names index parameter mcmc_tidiers (also add example rstan_example?); related naming issue?","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/articles/broom_mixed_intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to `broom.mixed`","text":"broom.mixed spinoff broom package. goal broom bring modeling process “tidy”(TM) workflow, particular providing standardized verbs provide information tidy: estimates, standard errors, confidence intervals, etc. augment: residuals, fitted values, influence measures, etc. glance: whole-model summaries: AIC, R-squared, etc. broom.mixed aims provide methods many packages model types R ecosystem possible. methods separated main broom package issues need dealt models (e.g. different types parameters: fixed, random-effects parameters, conditional modes/BLUPs random effects, etc.) especially relevant broader universe models broom deals .","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/articles/broom_mixed_intro.html","id":"terminology","dir":"Articles","previous_headings":"Mixed-model-specific issues","what":"Terminology","title":"Introduction to `broom.mixed`","text":"upper-level parameters describe distribution random variables (variance, covariance, precision, standard deviation, correlation) called random-effect parameters (ran_pars effects argument tidying) values describe deviation observations group level population-level effect (posterior means medians, conditional modes, BLUPs depending model) called random-effect values (ran_vals effects argument tidying) parameters describe population-level effects (categorical continuous) predictor variables called fixed effects (fixed effects argument tidying) categorical variable (factor) identifies group cluster observation belongs called grouping variable (group column tidy() output) particular level factor specifies level grouping variable observation belongs called group level (level column tidy() output) categorical continuous predictor variables control expected value (.e., enter linear predictor part model) called terms (term column tidy() output); note unlike base broom, term column may duplicated values, term may enter multiple model components (e.g. zero-inflated conditional models; models one response; fixed effects random effects)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/articles/broom_mixed_intro.html","id":"time-consuming-computations","dir":"Articles","previous_headings":"Mixed-model-specific issues","what":"Time-consuming computations","title":"Introduction to `broom.mixed`","text":"kinds computations needed mixed model summaries computationally expensive, e.g. likelihood profiles parametric bootstrapping. case broom.mixed may offer option passing pre-computed object tidy(), eg. profile argument tidy.merMod (lmer/glmer) method.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/articles/broom_mixed_intro.html","id":"related-packages","dir":"Articles","previous_headings":"","what":"Related packages","title":"Introduction to `broom.mixed`","text":"many, many things one might want fitted model, broom.mixed can . emmeans multcomp car afex sjStats/sjPlots rockchalk","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/articles/broom_mixed_intro.html","id":"dotwhisker-broom-mixed","dir":"Articles","previous_headings":"Related packages","what":"dotwhisker + broom.mixed","title":"Introduction to `broom.mixed`","text":"dotwhisker convenient platform creating dot-whisker plots - either directly models lists models (tidy() methods automatically called convert models tidy format), (possibly post-processed) output tidy() call. couple caveats issues aware using dotwhisker conjunction broom.mixed, however. fixed effects, group value set NA: current CRAN version (0.5.0), unfortunate na.omit() within dwplot code eliminate fixed effects unless drop column passing results dwplot (fixed current GitHub version, can install devtools::install_github(\"fsolt/dotwhisker\")). dwplot(list(fitted_model)) plot non-unique values together tidy(fitted_model) %>% tidyr::unite(term, group, term) create new term column ’s combination group term columns (disambiguate random-effect terms different grouping variables); unite(term, component, term) disambiguate conditional zero-inflation parameters. code shows slightly complicated (prettier) approach. (sort disambiguate_terms() function added future version package …)","code":"library(dplyr) library(tidyr) library(broom.mixed) if (require(\"brms\") && require(\"dotwhisker\") && require(\"ggplot2\")) {     L <- load(system.file(\"extdata\", \"brms_example.rda\", package=\"broom.mixed\"))     gg0 <- (tidy(brms_crossedRE)         ## disambiguate         %>% mutate(term=ifelse(grepl(\"sd__(Int\",term,fixed=TRUE),                                paste(group,term,sep=\".\"),                                term))         %>% dwplot     )     gg0 + geom_vline(xintercept=0,lty=2) }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/articles/broom_mixed_intro.html","id":"capabilities","dir":"Articles","previous_headings":"","what":"Capabilities","title":"Introduction to `broom.mixed`","text":"Automatically retrieve table available methods: Manually compiled list capabilities (possibly date):","code":"get_methods() ## # A tibble: 22 × 4 ##    class    tidy  glance augment ##    <chr>    <lgl> <lgl>  <lgl>   ##  1 allFit   TRUE  TRUE   FALSE   ##  2 brmsfit  TRUE  TRUE   TRUE    ##  3 gamlss   TRUE  TRUE   FALSE   ##  4 gamm4    TRUE  TRUE   TRUE    ##  5 glmmadmb TRUE  TRUE   TRUE    ##  6 glmmTMB  TRUE  TRUE   TRUE    ##  7 gls      TRUE  TRUE   TRUE    ##  8 lme      TRUE  TRUE   TRUE    ##  9 lmList4  TRUE  FALSE  FALSE   ## 10 mcmc     TRUE  FALSE  FALSE   ## # … with 12 more rows ## Warning in library(package, lib.loc = lib.loc, character.only = TRUE, ## logical.return = TRUE, : there is no package called 'pander'"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Bolker. Author, maintainer. David Robinson. Author. Dieter Menne. Contributor. Jonah Gabry. Contributor. Paul Buerkner. Contributor. Christopher Hua. Contributor. William Petry. Contributor. Joshua Wiley. Contributor. Patrick Kennedy. Contributor. Eduard Szöcs. Contributor.            BASF SE Indrajeet Patil. Contributor. Vincent Arel-Bundock. Contributor. Bill Denney. Contributor. Cory Brunson. Contributor.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bolker B, Robinson D (2022). broom.mixed: Tidying Methods Mixed Models. https://github.com/bbolker/broom.mixed, https://jpiaskowski.github.io/broom.mixed/.","code":"@Manual{,   title = {broom.mixed: Tidying Methods for Mixed Models},   author = {Ben Bolker and David Robinson},   year = {2022},   note = {https://github.com/bbolker/broom.mixed, https://jpiaskowski.github.io/broom.mixed/}, }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/index.html","id":"where-to-ask-questions","dir":"","previous_headings":"","what":"Where to ask questions","title":"Tidying Methods for Mixed Models","text":"r-sig-mixed-models mailing list (please subscribe list posting) CrossValidated mailing list people know using mixed models R; CrossValidated larger overall audience nicer question/answer format (allows pictures, code formatting, etc.). r-sig-mixed-models@r-project.org StackOverflow (similar pros/cons previous point) bug, infelicity, wishlist reporting: broom.mixed issues list maintainer e-mail urgent/private communications Please cross-post, .e. ask question one forum, unless ’s suggested posted wrong place, unless receive total silence one forum. latter case may better send reminder/“bump” message original forum; case mention new message /’ve previously asked question. (https://www.maxpixel.net)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/assert_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"check if a package is available and return informative message otherwise — assert_dependency","title":"check if a package is available and return informative message otherwise — assert_dependency","text":"check package available return informative message otherwise","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/assert_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if a package is available and return informative message otherwise — assert_dependency","text":"","code":"assert_dependency(library_name)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/augment.ranef.mer.html","id":null,"dir":"Reference","previous_headings":"","what":"Augmentation for random effects (for caterpillar plots etc.) — augment.ranef.mer","title":"Augmentation for random effects (for caterpillar plots etc.) — augment.ranef.mer","text":"Augmentation random effects (caterpillar plots etc.)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/augment.ranef.mer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augmentation for random effects (for caterpillar plots etc.) — augment.ranef.mer","text":"","code":"# S3 method for ranef.mer augment(x, ci.level = 0.9, reorder = TRUE, order.var = 1, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/augment.ranef.mer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augmentation for random effects (for caterpillar plots etc.) — augment.ranef.mer","text":"x ranef (conditional mode) information lme4 fit, using ranef(.,condVar=TRUE) ci.level level confidence intervals reorder reorder levels conditional mode values? order.var numeric character: variable use ordering levels? ... additional arguments (unused: generic consistency)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/augment.ranef.mer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augmentation for random effects (for caterpillar plots etc.) — augment.ranef.mer","text":"","code":"if (require(\"lme4\")) {    load(system.file(\"extdata\",\"lme4_example.rda\",package=\"broom.mixed\"))    rr <- ranef(lmm1,condVar=TRUE)    aa <- broom::augment(rr)    ## Q-Q plot:    if (require(ggplot2) && require(dplyr)) {       g0 <- ggplot(aa,aes(estimate,qq,xmin=lb,xmax=ub))+           geom_errorbarh(height=0)+           geom_point()+facet_wrap(~variable,scale=\"free_x\")       ## regular caterpillar plot:       g1 <- ggplot(aa,aes(estimate,level,xmin=lb,xmax=ub))+          geom_errorbarh(height=0)+          geom_vline(xintercept=0,lty=2)+          geom_point()+facet_wrap(~variable,scale=\"free_x\")       ## emphasize extreme values       aa2 <- group_by(aa,grp,level)       aa3 <- mutate(aa2, keep=any(estimate/std.error>2))       ## Update caterpillar plot with extreme levels highlighted       ##  (highlight all groups with *either* extreme intercept *or*       ##   extreme slope)       ggplot(aa3, aes(estimate,level,xmin=lb,xmax=ub,colour=factor(keep)))+          geom_errorbarh(height=0)+          geom_vline(xintercept=0,lty=2)+          geom_point()+facet_wrap(~variable,scale=\"free_x\")+          scale_colour_manual(values=c(\"black\",\"red\"), guide=FALSE)    } } #> Loading required package: lme4 #> Loading required package: Matrix #> Loading required package: ggplot2 #> Warning: package ‘ggplot2’ was built under R version 4.1.2 #> Loading required package: dplyr #> Warning: package ‘dplyr’ was built under R version 4.1.2 #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please use `guide = \"none\"` instead."},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/brms_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for a brms model — brms_tidiers","title":"Tidying methods for a brms model — brms_tidiers","text":"methods tidy estimates brmsfit-objects (fitted model objects brms package) summary.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/brms_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for a brms model — brms_tidiers","text":"","code":"# S3 method for brmsfit tidy(   x,   parameters = NA,   effects = c(\"fixed\", \"ran_pars\"),   robust = FALSE,   conf.int = TRUE,   conf.level = 0.95,   conf.method = c(\"quantile\", \"HPDinterval\"),   fix.intercept = TRUE,   exponentiate = FALSE,   ... )  # S3 method for brmsfit glance(x, looic = FALSE, ...)  # S3 method for brmsfit augment(x, data = stats::model.frame(x), newdata = NULL, se.fit = TRUE, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/brms_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for a brms model — brms_tidiers","text":"x Fitted model object brms package. See brmsfit-class. parameters Names parameters summary returned, given character vector regular expressions. NA (default) summarized parameters specified effects argument. effects character vector including one \"fixed\", \"ran_vals\", \"ran_pars\". See Value section details. robust Whether use median median absolute deviation posterior distribution, rather   mean standard deviation, derive point estimates uncertainty conf.int TRUE columns lower (conf.low) upper bounds (conf.high) posterior uncertainty intervals included. conf.level Defines range posterior uncertainty conf.int, 100 * conf.level% parameter's posterior distributio lies within corresponding interval. used conf.int = TRUE. conf.method method computing confidence intervals (\"quantile\" \"HPDinterval\") fix.intercept rename \"Intercept\" parameter \"(Intercept)\", match behaviour model types? exponentiate whether exponentiate fixed-effect coefficient estimates confidence intervals (common logistic regression); TRUE, also scales standard errors exponentiated coefficient, transforming new scale ... Extra arguments, used looic LOO Information Criterion (related info) included? See loo.stanfit details. (can slow models fit large datasets.) data data frame newdata new data frame se.fit return standard errors fit?","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/brms_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for a brms model — brms_tidiers","text":"tidying methods return data.frame without rownames. structure depends method chosen. parameters = NA, effects argument used determine parameters summarize. Generally, tidy.brmsfit returns one row coefficient, least three columns: term name model parameter. estimate point estimate coefficient (mean median). std.error standard error point estimate (sd mad). effects = \"fixed\", population-level effects returned. effects = \"ran_vals\", group-level effects returned. case, two additional columns added: group name grouping factor. level name level grouping factor. Specifying effects = \"ran_pars\" selects standard deviations correlations group-level parameters. conf.int = TRUE, columns lower upper bounds posterior conf.int computed.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/brms_tidiers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Tidying methods for a brms model — brms_tidiers","text":"names ‘fixed’, ‘ran_pars’, ‘ran_vals’ (corresponding \"non-varying\", \"hierarchical\", \"varying\" respectively previous versions package), technically inappropriate Bayesian setting \"fixed\" \"random\" effects well-defined, used compatibility (frequentist) mixed model types. present, components parameter estimates separated parsing column names as_draws (e.g. r_patient[1,Intercept] random effect intercept patient 1, b_Trt1 fixed effect Trt1. try detect underscores parameter names warn, detection may imperfect.","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/brms_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for a brms model — brms_tidiers","text":"","code":"## original model  if (FALSE) {     brms_crossedRE <- brm(mpg ~ wt + (1|cyl) + (1+wt|gear), data = mtcars,            iter = 500, chains = 2)  }  if (.Platform$OS.type!=\"windows\" && require(\"brms\")) {    ## too slow on Windows, skip (>5 seconds on r-devel-windows)    ## load stored object    load(system.file(\"extdata\", \"brms_example.rda\", package=\"broom.mixed\"))     fit <- brms_crossedRE    tidy(fit)    tidy(fit, parameters = \"^sd_\", conf.int = FALSE)    tidy(fit, effects = \"fixed\", conf.method=\"HPDinterval\")    tidy(fit, effects = \"ran_vals\")    tidy(fit, effects = \"ran_pars\", robust = TRUE)    # glance method    glance(fit)    ## this example will give a warning that it should be run with    ## reloo=TRUE; however, doing this will fail    ## because the \\code{fit} object has been stripped down to save space    suppressWarnings(glance(fit, looic = TRUE, cores = 1))    head(augment(fit)) } #> Loading required package: brms #> Warning: there is no package called ‘brms’"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/compact.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NULL items in a vector or list — compact","title":"Remove NULL items in a vector or list — compact","text":"Remove NULL items vector list","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/compact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NULL items in a vector or list — compact","text":"","code":"compact(x)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/compact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NULL items in a vector or list — compact","text":"x vector list","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/extractEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to extract the fixed or random effects from an MCMCglmm object — .extractEffects","title":"Internal function to extract the fixed or random effects from an MCMCglmm object — .extractEffects","text":"Extracts fixed random effects portions MCMCglmm object. Note random, estimates , variability estimates. use options let get either just posterior mean posterior samples.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/extractEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to extract the fixed or random effects from an MCMCglmm object — .extractEffects","text":"","code":".extractEffects(   object,   use = c(\"all\", \"mean\"),   which = c(\"fixed\", \"random\"),   ... )"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/extractEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to extract the fixed or random effects from an MCMCglmm object — .extractEffects","text":"object MCMCglmm object use character string indicating whether return “” posterior samples (default) “mean” . character string indicating whether return “fixed” (default) “random” effects. ... currently used.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/extractEffects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to extract the fixed or random effects from an MCMCglmm object — .extractEffects","text":"matrix posterior samples means fixed random effects.","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/fixef.MCMCglmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fixed effects from an MCMCglmm object — fixef.MCMCglmm","title":"Extract fixed effects from an MCMCglmm object — fixef.MCMCglmm","text":"Function designed extract fixed effects MCMCglmm model object. Can either extract samples fixed effects posteriors return posterior means.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/fixef.MCMCglmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fixed effects from an MCMCglmm object — fixef.MCMCglmm","text":"","code":"# S3 method for MCMCglmm fixef(object, use = c(\"all\", \"mean\"), ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/fixef.MCMCglmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fixed effects from an MCMCglmm object — fixef.MCMCglmm","text":"object MCMCglmm model object extract effects use character string indicating whether extract posterior samples mean posteriors. Defaults \"\". ... Arguments passed worker function.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/fixef.MCMCglmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fixed effects from an MCMCglmm object — fixef.MCMCglmm","text":"matrix fixed effects","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/fixef.MCMCglmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fixed effects from an MCMCglmm object — fixef.MCMCglmm","text":"","code":"if (FALSE) {   # a simple MCMCglmm model   data(PlodiaPO)   m <- MCMCglmm(PO ~ 1, random= ~ FSfamily, data=PlodiaPO, verbose=FALSE)    # only extract average fixed effects   fixef(m, use = \"mean\")    # histogram of posterior samples of fixed effects   hist(fixef(m))   # matches the mean   rowMeans(fixef(m)) }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/gamlss_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for gamlss objects — gamlss_tidiers","title":"Tidying methods for gamlss objects — gamlss_tidiers","text":"Tidying methods \"gamlss\" objects gamlss package.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/gamlss_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for gamlss objects — gamlss_tidiers","text":"","code":"# S3 method for gamlss tidy(x, quick = FALSE, conf.int = FALSE, conf.level = 0.95, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/gamlss_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for gamlss objects — gamlss_tidiers","text":"x \"gamlss\" object quick Whether perform fast version, return coefficients conf.int whether return confidence intervals conf.level confidence level CI ... arguments passed confint.gamlss","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/gamlss_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for gamlss objects — gamlss_tidiers","text":"tidying methods return data.frame without rownames, whose structure depends method chosen. tibble one row coefficient, containing columns: parameter type coefficient estimated: mu, sigma, nu, tau term term model estimated tested estimate estimated coefficient std.error standard error statistic t-statistic p.value two-sided p-value","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/gamlss_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for gamlss objects — gamlss_tidiers","text":"","code":"if (requireNamespace(\"gamlss\", quietly = TRUE) &&     requireNamespace(\"gamlss.data\", quietly = TRUE)) {     data(abdom, package=\"gamlss.data\")     if (FALSE) {          mod <- gamlss(y~pb(x), sigma.fo=~pb(x), family=BCT,                        data=abdom, method=mixed(1,20))     }     ## load stored object     mod <- readRDS(system.file(\"extdata\", \"gamlss_example.rds\",                    package=\"broom.mixed\"))     tidy(mod) }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/get_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all method/class combinations currently provided by the broom.mixed package — get_methods","title":"Retrieve all method/class combinations currently provided by the broom.mixed package — get_methods","text":"Retrieve method/class combinations currently provided broom.mixed package","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/get_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all method/class combinations currently provided by the broom.mixed package — get_methods","text":"","code":"get_methods()"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/get_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve all method/class combinations currently provided by the broom.mixed package — get_methods","text":"","code":"print(get_methods(), n = Inf) #> # A tibble: 22 × 4 #>    class     tidy  glance augment #>    <chr>     <lgl> <lgl>  <lgl>   #>  1 MCMCglmm  TRUE  FALSE  FALSE   #>  2 MixMod    TRUE  FALSE  FALSE   #>  3 TMB       TRUE  FALSE  FALSE   #>  4 allFit    TRUE  TRUE   FALSE   #>  5 brmsfit   TRUE  TRUE   TRUE    #>  6 gamlss    TRUE  TRUE   FALSE   #>  7 gamm4     TRUE  TRUE   TRUE    #>  8 glmmTMB   TRUE  TRUE   TRUE    #>  9 glmmadmb  TRUE  TRUE   TRUE    #> 10 gls       TRUE  TRUE   TRUE    #> 11 lmList4   TRUE  FALSE  FALSE   #> 12 lme       TRUE  TRUE   TRUE    #> 13 mcmc      TRUE  FALSE  FALSE   #> 14 mcmc.list TRUE  FALSE  FALSE   #> 15 merMod    TRUE  TRUE   TRUE    #> 16 ranef.mer FALSE FALSE  TRUE    #> 17 rjags     TRUE  FALSE  FALSE   #> 18 rlmerMod  TRUE  FALSE  FALSE   #> 19 stanfit   TRUE  FALSE  FALSE   #> 20 stanreg   TRUE  TRUE   FALSE   #> 21 varComb   TRUE  FALSE  FALSE   #> 22 varFunc   TRUE  FALSE  FALSE"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for glmmTMB models — glmmTMB_tidiers","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"methods tidy coefficients mixed effects models, particularly responses merMod class","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"","code":"# S3 method for glmmTMB tidy(   x,   effects = c(\"ran_pars\", \"fixed\"),   component = c(\"cond\", \"zi\"),   scales = NULL,   ran_prefix = NULL,   conf.int = FALSE,   conf.level = 0.95,   conf.method = \"Wald\",   exponentiate = FALSE,   ... )  # S3 method for glmmTMB augment(x, data = stats::model.frame(x), newdata = NULL, ...)  # S3 method for glmmTMB glance(x, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"x object class merMod, lmer, glmer, nlmer effects character vector including one \"fixed\" (fixed-effect parameters), \"ran_pars\" (variances covariances standard deviations correlations random effect terms) \"ran_vals\" (conditional modes/BLUPs/latent variable estimates) component component extract (e.g. cond conditional effects (.e., traditional fixed effects); zi zero-inflation model; disp dispersion model scales scales report variables: random effects, choices ‘\"sdcor\"’ (standard deviations correlations: default scales NULL) ‘\"varcov\"’ (variances covariances). NA means transformation, appropriate e.g. fixed effects; inverse-link transformations (exponentiation logistic) yet implemented, may future. ran_prefix length-2 character vector specifying strings use prefixes self- (variance/standard deviation) cross- (covariance/correlation) random effects terms conf.int whether include confidence interval conf.level confidence level CI conf.method method computing confidence intervals (see confint.merMod) exponentiate whether exponentiate fixed-effect coefficient estimates confidence intervals (common logistic regression); TRUE, also scales standard errors exponentiated coefficient, transforming new scale ... extra arguments (used) data original data fitted ; given attempt reconstructed newdata new data used prediction; optional","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"tidying methods return tibble. structure depends method chosen. tidy returns one row estimated effect, either groups depending effects parameter. contains columns group group within random effect estimated: NA fixed effects level level within group (NA except modes) term term estimated estimate estimated coefficient std.error standard error statistic t- Z-statistic (NA modes) p.value P-value computed t-statistic (may missing/NA) augment returns one row original observation, columns (prepended .) added. Included columns .fitted predicted values .resid residuals .fixed predicted values random effects glance returns one row columns sigma square root estimated residual variance logLik data's log-likelihood model AIC Akaike Information Criterion BIC Bayesian Information Criterion deviance deviance","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"modeling performed na.action = \"na.omit\" (typical default), rows NA initial data omitted entirely augmented data frame. modeling performed na.action = \"na.exclude\", one provide original data second argument, point augmented data contain rows (typically NAs place new columns). original data provided augment na.action = \"na.exclude\", warning raised incomplete rows dropped.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"zero-inflation parameters (including intercept) reported logit scale","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmTMB_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for glmmTMB models — glmmTMB_tidiers","text":"","code":"if (require(\"glmmTMB\") && require(\"lme4\")     ## &&     ## make sure package versions are OK     ## checkDepPackageVersion(dep_pkg = \"TMB\",     ##                       this_pkg = \"glmmTMB\",     ##                        warn = FALSE) &&     ## checkDepPackageVersion(dep_pkg = \"Matrix\",     ##                       this_pkg = \"TMB\",     ##                      warn = FALSE) ) {     data(\"sleepstudy\",package=\"lme4\")     ## original model:     if (FALSE) {         lmm1 <- glmmTMB(Reaction ~ Days + (Days | Subject), sleepstudy)     }     ## load stored object     L <- load(system.file(\"extdata\",\"glmmTMB_example.rda\",package=\"broom.mixed\"))     for (obj in L) {        assign(obj, glmmTMB::up2date(get(obj)))     }     tidy(lmm1)     tidy(lmm1, effects = \"fixed\")     tidy(lmm1, effects = \"fixed\", conf.int=TRUE)     tidy(lmm1, effects = \"fixed\", conf.int=TRUE, conf.method=\"uniroot\")     ## FIX: tidy(lmm1, effects = \"ran_vals\", conf.int=TRUE)     head(augment(lmm1, sleepstudy))     glance(lmm1)      ## original model:     ##  glmm1 <- glmmTMB(incidence/size ~ period + (1 | herd),     ##                  data = cbpp, family = binomial, weights=size)     tidy(glmm1)     tidy(glmm1, effects = \"fixed\")     tidy(glmm1, effects = \"fixed\", exponentiate=TRUE)     tidy(glmm1, effects = \"fixed\", conf.int=TRUE, exponentiate=TRUE)     head(augment(glmm1, cbpp))     head(augment(glmm1, cbpp, type.residuals=\"pearson\"))     glance(glmm1) if (FALSE) {     ## profile CIs - a little bit slower but more accurate     tidy(glmm1, effects = \"fixed\", conf.int=TRUE, exponentiate=TRUE, conf.method=\"profile\") } } #> Loading required package: glmmTMB #> Warning: there is no package called ‘glmmTMB’"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmadmb_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for glmmADMB models — glmmadmb_tidiers","title":"Tidying methods for glmmADMB models — glmmadmb_tidiers","text":"methods tidy coefficients glmmADMB models","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmadmb_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for glmmADMB models — glmmadmb_tidiers","text":"","code":"# S3 method for glmmadmb tidy(   x,   effects = c(\"fixed\", \"ran_pars\"),   component = \"cond\",   scales = NULL,   ran_prefix = NULL,   conf.int = FALSE,   conf.level = 0.95,   conf.method = \"Wald\",   ... )  # S3 method for glmmadmb augment(x, data = stats::model.frame(x), newdata, ...)  # S3 method for glmmadmb glance(x, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmadmb_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for glmmADMB models — glmmadmb_tidiers","text":"x object class glmmadmb glmer, nlmer effects character vector including one \"fixed\" (fixed-effect parameters), \"ran_pars\" (variances covariances standard deviations correlations random effect terms) \"ran_vals\" (conditional modes/BLUPs/latent variable estimates) component component(s) report (e.g., conditional, zero-inflation, dispersion: present works \"cond\") scales scales report variables: random effects, choices ‘\"sdcor\"’ (standard deviations correlations: default scales NULL) ‘\"varcov\"’ (variances covariances). NA means transformation, appropriate e.g. fixed effects; inverse-link transformations (exponentiation logistic) yet implemented, may future. ran_prefix length-2 character vector specifying strings use prefixes self- (variance/standard deviation) cross- (covariance/correlation) random effects terms conf.int whether include confidence interval conf.level confidence level CI conf.method method computing confidence intervals (see confint.merMod) ... extra arguments (used) data original data fitted ; given attempt reconstructed newdata new data used prediction; optional","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmadmb_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for glmmADMB models — glmmadmb_tidiers","text":"tidying methods return tbl_df without rownames. structure depends method chosen. tidy returns one row estimated effect, either groups depending effects parameter. contains columns group group within random effect estimated: NA fixed effects level level within group (NA except modes) term term estimated estimate estimated coefficient std.error standard error statistic t- Z-statistic (NA modes) p.value P-value computed t-statistic (may missing/NA) augment returns one row original observation, columns (prepended .) added. Included columns .fitted predicted values .resid residuals .fixed predicted values random effects Also added \"merMod\" objects, \"mer\" objects, values response object within model (type lmResp, glmResp, nlsResp, etc). include \".mu\", \".offset\", \".sqrtXwt\", \".sqrtrwt\", \".eta\". glance returns one row columns sigma square root estimated residual variance logLik data's log-likelihood model AIC Akaike Information Criterion BIC Bayesian Information Criterion deviance deviance","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmadmb_tidiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidying methods for glmmADMB models — glmmadmb_tidiers","text":"modeling performed na.action = \"na.omit\" (typical default), rows NA initial data omitted entirely augmented data frame. modeling performed na.action = \"na.exclude\", one provide original data second argument, point augmented data contain rows (typically NAs place new columns). original data provided augment na.action = \"na.exclude\", warning raised incomplete rows dropped.","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/glmmadmb_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for glmmADMB models — glmmadmb_tidiers","text":"","code":"if (require(\"glmmADMB\") && require(\"lme4\")) {     ## original model     if (FALSE) {         data(\"sleepstudy\", package=\"lme4\")         lmm1 <- glmmadmb(Reaction ~ Days + (Days | Subject), sleepstudy,                          family=\"gaussian\")     }     ## load stored object     load(system.file(\"extdata\",\"glmmADMB_example.rda\",package=\"broom.mixed\"))     tidy(lmm1, effects = \"fixed\")     tidy(lmm1, effects = \"fixed\", conf.int=TRUE)     ## tidy(lmm1, effects = \"fixed\", conf.int=TRUE, conf.method=\"profile\")     ## tidy(lmm1, effects = \"ran_vals\", conf.int=TRUE)     head(augment(lmm1, sleepstudy))     glance(lmm1)      glmm1 <- glmmadmb(cbind(incidence, size - incidence) ~ period + (1 | herd),                   data = cbpp, family = \"binomial\")     tidy(glmm1)     tidy(glmm1, effects = \"fixed\")     head(augment(glmm1, cbpp))     glance(glmm1)  } #> Loading required package: glmmADMB #> Warning: there is no package called ‘glmmADMB’"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/insert_NAs.html","id":null,"dir":"Reference","previous_headings":"","what":"insert a row of NAs into a data frame wherever another data frame has NAs — insert_NAs","title":"insert a row of NAs into a data frame wherever another data frame has NAs — insert_NAs","text":"insert row NAs data frame wherever another data frame NAs","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/insert_NAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"insert a row of NAs into a data frame wherever another data frame has NAs — insert_NAs","text":"","code":"insert_NAs(x, original)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/insert_NAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"insert a row of NAs into a data frame wherever another data frame has NAs — insert_NAs","text":"x data frame one row non-NA row original original data frame NAs","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/lme4_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for mixed effects models — lme4_tidiers","title":"Tidying methods for mixed effects models — lme4_tidiers","text":"methods tidy coefficients lme4::lmer lme4::glmer models (.e., merMod objects). Methods also provided allFit objects.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/lme4_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for mixed effects models — lme4_tidiers","text":"","code":"# S3 method for merMod tidy(   x,   effects = c(\"ran_pars\", \"fixed\"),   scales = NULL,   exponentiate = FALSE,   ran_prefix = NULL,   conf.int = FALSE,   conf.level = 0.95,   conf.method = \"Wald\",   ddf.method = NULL,   profile = NULL,   debug = FALSE,   ... )  # S3 method for rlmerMod tidy(   x,   effects = c(\"ran_pars\", \"fixed\"),   scales = NULL,   exponentiate = FALSE,   ran_prefix = NULL,   conf.int = FALSE,   conf.level = 0.95,   conf.method = \"Wald\",   ddf.method = NULL,   profile = NULL,   debug = FALSE,   ... )  # S3 method for merMod augment(x, data = stats::model.frame(x), newdata, ...)  # S3 method for merMod glance(x, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/lme4_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for mixed effects models — lme4_tidiers","text":"x object class merMod, lmer, glmer, nlmer effects character vector including one \"fixed\" (fixed-effect parameters); \"ran_pars\" (variances covariances standard deviations correlations random effect terms); \"ran_vals\" (conditional modes/BLUPs/latent variable estimates); \"ran_coefs\" (predicted parameter values group, returned coef.merMod) scales scales report variables: random effects, choices ‘\"sdcor\"’ (standard deviations correlations: default scales NULL) ‘\"vcov\"’ (variances covariances). NA means transformation, appropriate e.g. fixed effects. exponentiate whether exponentiate fixed-effect coefficient estimates confidence intervals (common logistic regression); TRUE, also scales standard errors exponentiated coefficient, transforming new scale ran_prefix length-2 character vector specifying strings use prefixes self- (variance/standard deviation) cross- (covariance/correlation) random effects terms conf.int whether include confidence interval conf.level confidence level CI conf.method method computing confidence intervals (see lme4::confint.merMod) ddf.method method computing degrees freedom t-statistics (applicable using lmerTest package: see summary.lmerModLmerTest profile pre-computed profile object, speed using conf.method=\"profile\" debug print debugging output? ... Additional arguments (passed confint.merMod tidy; augment_columns augment; ignored glance) data original data fitted ; given attempt reconstructed newdata new data used prediction; optional","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/lme4_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for mixed effects models — lme4_tidiers","text":"tidying methods return data.frame without rownames. structure depends method chosen. tidy returns one row estimated effect, either groups depending effects parameter. contains columns group group within random effect estimated: \"fixed\" fixed effects level level within group (NA except modes) term term estimated estimate estimated coefficient std.error standard error statistic t- Z-statistic (NA modes) p.value P-value computed t-statistic (may missing/NA) augment returns one row original observation, columns (prepended .) added. Included columns .fitted predicted values .resid residuals .fixed predicted values random effects Also added \"merMod\" objects, \"mer\" objects, values response object within model (type lmResp, glmResp, nlsResp, etc). include \".mu\", \".offset\", \".sqrtXwt\", \".sqrtrwt\", \".eta\". glance returns one row columns nobs number observations sigma square root estimated residual variance logLik data's log-likelihood model AIC Akaike Information Criterion BIC Bayesian Information Criterion deviance deviance","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/lme4_tidiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidying methods for mixed effects models — lme4_tidiers","text":"modeling performed na.action = \"na.omit\" (typical default), rows NA initial data omitted entirely augmented data frame. modeling performed na.action = \"na.exclude\", one provide original data second argument, point augmented data contain rows (typically NAs place new columns). original data provided augment na.action = \"na.exclude\", warning raised incomplete rows dropped.","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/lme4_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for mixed effects models — lme4_tidiers","text":"","code":"if (require(\"lme4\")) {     ## original model     if (FALSE) {         lmm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)     }     ## load stored object     load(system.file(\"extdata\", \"lme4_example.rda\", package=\"broom.mixed\"))     (tt <- tidy(lmm1))     tidy(lmm1, effects = \"fixed\")     tidy(lmm1, effects = \"fixed\", conf.int=TRUE)     tidy(lmm1, effects = \"fixed\", conf.int=TRUE, conf.method=\"profile\")     ## lmm1_prof <- profile(lmm1) # generated by extdata/runexamples     tidy(lmm1, conf.int=TRUE, conf.method=\"profile\", profile=lmm1_prof)     ## conditional modes (group-level deviations from population-level estimate)     tidy(lmm1, effects = \"ran_vals\", conf.int=TRUE)     ## coefficients (group-level estimates)     (rcoef1 <- tidy(lmm1, effects = \"ran_coefs\"))     if (require(tidyr) && require(dplyr)) {        ## reconstitute standard coefficient-by-level table        spread(rcoef1,key=term,value=estimate)        ## split ran_pars into type + term; sort fixed/sd/cor        (tt %>% separate(term,c(\"type\",\"term\"),sep=\"__\",fill=\"left\")            %>% arrange(!is.na(type),desc(type)))     }     head(augment(lmm1, sleepstudy))     glance(lmm1)      glmm1 <- glmer(cbind(incidence, size - incidence) ~ period + (1 | herd),                   data = cbpp, family = binomial)     tidy(glmm1)     tidy(glmm1,exponentiate=TRUE)     tidy(glmm1, effects = \"fixed\")     ## suppress warning about influence.merMod     head(suppressWarnings(augment(glmm1, cbpp)))     glance(glmm1)      startvec <- c(Asym = 200, xmid = 725, scal = 350)     nm1 <- nlmer(circumference ~ SSlogis(age, Asym, xmid, scal) ~ Asym|Tree,                   Orange, start = startvec)     ## suppress warnings about var-cov matrix ...     op <- options(warn=-1)     tidy(nm1)     tidy(nm1, effects = \"fixed\")     options(op)     head(augment(nm1, Orange))     glance(nm1)     detach(\"package:lme4\") } #> Computing profile confidence intervals ... #> Loading required package: tidyr #> Warning: package ‘tidyr’ was built under R version 4.1.2 #>  #> Attaching package: ‘tidyr’ #> The following objects are masked from ‘package:Matrix’: #>  #>     expand, pack, unpack if (require(\"lmerTest\")) {    lmm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)    tidy(lmm1)    glance(lmm1)    detach(\"package:lmerTest\")  # clean up } #> Loading required package: lmerTest #> Loading required package: lme4 #>  #> Attaching package: ‘lmerTest’ #> The following object is masked from ‘package:lme4’: #>  #>     lmer #> The following object is masked from ‘package:stats’: #>  #>     step"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/mcmc_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for MCMC (Stan, JAGS, etc.) fits — tidy.MCMCglmm","title":"Tidying methods for MCMC (Stan, JAGS, etc.) fits — tidy.MCMCglmm","text":"Tidying methods MCMC (Stan, JAGS, etc.) fits","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/mcmc_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for MCMC (Stan, JAGS, etc.) fits — tidy.MCMCglmm","text":"","code":"# S3 method for MCMCglmm tidy(x, effects = c(\"fixed\", \"ran_pars\"), scales = NULL, ...)  tidyMCMC(   x,   pars,   robust = FALSE,   conf.int = FALSE,   conf.level = 0.95,   conf.method = c(\"quantile\", \"HPDinterval\"),   drop.pars = c(\"lp__\", \"deviance\"),   rhat = FALSE,   ess = FALSE,   index = FALSE,   ... )  # S3 method for rjags tidy(   x,   robust = FALSE,   conf.int = FALSE,   conf.level = 0.95,   conf.method = \"quantile\",   ... )  # S3 method for stanfit tidy(   x,   pars,   robust = FALSE,   conf.int = FALSE,   conf.level = 0.95,   conf.method = c(\"quantile\", \"HPDinterval\"),   drop.pars = c(\"lp__\", \"deviance\"),   rhat = FALSE,   ess = FALSE,   index = FALSE,   ... )  # S3 method for mcmc tidy(   x,   pars,   robust = FALSE,   conf.int = FALSE,   conf.level = 0.95,   conf.method = c(\"quantile\", \"HPDinterval\"),   drop.pars = c(\"lp__\", \"deviance\"),   rhat = FALSE,   ess = FALSE,   index = FALSE,   ... )  # S3 method for mcmc.list tidy(   x,   pars,   robust = FALSE,   conf.int = FALSE,   conf.level = 0.95,   conf.method = c(\"quantile\", \"HPDinterval\"),   drop.pars = c(\"lp__\", \"deviance\"),   rhat = FALSE,   ess = FALSE,   index = FALSE,   ... )"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/mcmc_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for MCMC (Stan, JAGS, etc.) fits — tidy.MCMCglmm","text":"x model fit converted data frame effects effects (fixed, random, etc.) return scales scales report results ... mostly unused; tidy.MCMCglmm, represent options passed tidy.mcmc (e.g. robust, conf.int, conf.method, ...) pars (character) specification parameters include robust use mean standard deviation (FALSE) median mean absolute deviation (TRUE) compute point estimates uncertainty? conf.int (logical) include confidence interval? conf.level probability level CI conf.method method computing confidence intervals (\"quantile\" \"HPDinterval\") drop.pars Parameters include output (log-probability information) rhat, ess (logical) include Rhat /effective sample size estimates? index Add index column, remove index term. example, term [13] becomes term index 13.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/mcmc_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for MCMC (Stan, JAGS, etc.) fits — tidy.MCMCglmm","text":"","code":"if (require(\"MCMCglmm\")) {   ## original model   if (FALSE) {       mm0 <- MCMCglmm(Reaction ~ Days,                  random = ~Subject, data = sleepstudy,                  nitt=4000,                  pr = TRUE              )    }    ## load stored object    load(system.file(\"extdata\",\"MCMCglmm_example.rda\",                                      package=\"broom.mixed\"))    tidy(mm0)    tidy(mm1)    tidy(mm2)    tail(tidy(mm0,effects=\"ran_vals\")) } #> Loading required package: MCMCglmm #> Warning: there is no package called ‘MCMCglmm’  # Using example from \"RStan Getting Started\" # https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started  model_file <- system.file(\"extdata\", \"8schools.stan\", package = \"broom.mixed\") schools_dat <- list(J = 8,                     y = c(28,  8, -3,  7, -1,  1, 18, 12),                     sigma = c(15, 10, 16, 11,  9, 11, 10, 18)) ## original model if (FALSE) {     set.seed(2015)     rstan_example <- rstan::stan(file = model_file, data = schools_dat,                          iter = 1000, chains = 2, save_dso = FALSE) } if (require(rstan)) {    ## load stored object    rstan_example <- readRDS(system.file(\"extdata\", \"rstan_example.rds\", package = \"broom.mixed\"))    tidy(rstan_example)    tidy(rstan_example, conf.int = TRUE, pars = \"theta\")    td_mean <- tidy(rstan_example, conf.int = TRUE)    td_median <- tidy(rstan_example, conf.int = TRUE, robust = TRUE)        if (require(dplyr) && require(ggplot2)) {        tds <- (dplyr::bind_rows(list(mean=td_mean, median=td_median), .id=\"method\")           %>% mutate(type=ifelse(grepl(\"^theta\",term),\"theta\",             ifelse(grepl(\"^eta\",term),\"eta\",                   \"other\")))       )       ggplot(tds, aes(estimate, term)) +       geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),height=0) +       geom_point(aes(color = method))+       facet_wrap(~type,scale=\"free\",ncol=1)  } ## require(dplyr,ggplot2) } ## require(rstan) #> Loading required package: rstan #> Warning: there is no package called ‘rstan’ if (require(R2jags)) {    ## see help(\"jags\",package=\"R2jags\")    ## and  example(\"jags\",package=\"R2jags\")    ## for details    ## load stored object    R2jags_example <- readRDS(system.file(\"extdata\", \"R2jags_example.rds\", package = \"broom.mixed\"))    tidy(R2jags_example)    tidy(R2jags_example, conf.int=TRUE, conf.method=\"quantile\") } #> Loading required package: R2jags #> Warning: there is no package called ‘R2jags’"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/nlme_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for mixed effects models — nlme_tidiers","title":"Tidying methods for mixed effects models — nlme_tidiers","text":"methods tidy coefficients mixed effects models lme class functions nlme package.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/nlme_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for mixed effects models — nlme_tidiers","text":"","code":"# S3 method for lme tidy(   x,   effects = c(\"var_model\", \"ran_pars\", \"fixed\"),   scales = NULL,   conf.int = FALSE,   conf.level = 0.95,   ... )  # S3 method for lme augment(x, data = x$data, newdata, ...)  # S3 method for lme glance(x, ...)  # S3 method for gls tidy(x, conf.int = FALSE, conf.level = 0.95, ...)  # S3 method for gls augment(x, data = nlme::getData(x), newdata, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/nlme_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for mixed effects models — nlme_tidiers","text":"x object class lme, lme nlme effects One \"var_model\", \"ran_pars\", \"fixed\", \"ran_vals\", /\"ran_coefs\". scales scales report variables: random effects, choices ‘\"sdcor\"’ (standard deviations correlations: default scales NULL) ‘\"vcov\"’ (variances covariances). NA means transformation, appropriate e.g. fixed effects. conf.int whether include confidence interval conf.level confidence level CI ... extra arguments (used) data original data fitted ; given attempt reconstructed newdata new data used prediction; optional","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/nlme_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for mixed effects models — nlme_tidiers","text":"tidying methods return data.frame without rownames. structure depends method chosen. tidy returns one row estimated effect, either random fixed depending effects parameter. effects = \"ran_vals\" (\"ran_pars\"), contains columns group group within random effect estimated level level within group term term estimated estimate estimated coefficient estimated column included parameters fixed.     TRUE residual error estimated FALSE residual error     fixed. effects=\"fixed\", tidy returns columns term fixed term estimated estimate estimate fixed effect std.error standard error statistic t-statistic p.value P-value computed t-statistic effects=\"var_model\" (weights argument model), tidy returns columns defined help tidy.varFunc. augment returns one row original observation, columns (prepended .) added. Included columns .fitted predicted values .resid residuals .fixed predicted values random effects glance returns one row columns sigma square root estimated residual variance logLik data's log-likelihood model AIC Akaike Information Criterion BIC Bayesian Information Criterion deviance returned NA. quote Brian Ripley R-help https://stat.ethz.ch/pipermail/r-help/2006-May/104744.html,  \"McCullagh & Nelder (1989) authorative [sic] reference, 1982 first edition manages use 'deviance' three separate senses one page.\"","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/nlme_tidiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidying methods for mixed effects models — nlme_tidiers","text":"modeling performed na.action = \"na.omit\" (typical default), rows NA initial data omitted entirely augmented data frame. modeling performed na.action = \"na.exclude\", one provide original data second argument, point augmented data contain rows (typically NAs place new columns). original data provided augment na.action = \"na.exclude\", warning raised incomplete rows dropped.","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/nlme_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for mixed effects models — nlme_tidiers","text":"","code":"if (require(\"nlme\") && require(\"lme4\")) {     data(\"sleepstudy\", package=\"lme4\")     ## original model     if (FALSE) {          lmm1 <- lme(Reaction ~ Days, random=~ Days|Subject, sleepstudy)     }     ## load stored object     load(system.file(\"extdata\",\"nlme_example.rda\", package=\"broom.mixed\"))     tidy(lmm1)     tidy(lmm1, effects = \"fixed\")     tidy(lmm1, conf.int = TRUE)     tidy(lmm1, effects = \"ran_pars\")     tidy(lmm1, effects = \"ran_vals\")     tidy(lmm1, effects = \"ran_coefs\")     head(augment(lmm1, sleepstudy))     glance(lmm1)      startvec <- c(Asym = 200, xmid = 725, scal = 350)     nm1 <- nlme(circumference ~ SSlogis(age, Asym, xmid, scal),                   data = Orange,                   fixed = Asym + xmid + scal ~1,                   random = Asym ~1,                   start = startvec)     tidy(nm1)     tidy(nm1, effects = \"fixed\")     head(augment(nm1, Orange))     glance(nm1)      gls1 <- gls(follicles ~ sin(2*pi*Time) + cos(2*pi*Time), Ovary,                          correlation = corAR1(form = ~ 1 | Mare))     tidy(gls1)     glance(gls1)     head(augment(gls1)) } #> Loading required package: nlme #>  #> Attaching package: ‘nlme’ #> The following object is masked from ‘package:lme4’: #>  #>     lmList #> The following object is masked from ‘package:dplyr’: #>  #>     collapse #> Warning: ran_pars not yet implemented for nonlinear models #> # A tibble: 6 × 5 #>   Mare     Time follicles .fitted .resid #>   <ord>   <dbl>     <dbl>   <dbl>  <dbl> #> 1 1     -0.136         20   13.7  6.28   #> 2 1     -0.0909        15   13.0  2.04   #> 3 1     -0.0455        19   12.1  6.87   #> 4 1      0             16   11.3  4.68   #> 5 1      0.0455        13   10.6  2.43   #> 6 1      0.0909        10    9.96 0.0405"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/paramNamesMCMCglmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the parameter names from an MCMCglmm object — paramNamesMCMCglmm","title":"Extract the parameter names from an MCMCglmm object — paramNamesMCMCglmm","text":"Simple function extract fixed random effects parameter names MCMCglmm object.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/paramNamesMCMCglmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the parameter names from an MCMCglmm object — paramNamesMCMCglmm","text":"","code":"paramNamesMCMCglmm(object, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/paramNamesMCMCglmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the parameter names from an MCMCglmm object — paramNamesMCMCglmm","text":"object MCMCglmm object ... used","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/paramNamesMCMCglmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the parameter names from an MCMCglmm object — paramNamesMCMCglmm","text":"list two elements: fixed character vector fixed effects parameter names random character vector random effects parameter names","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/paramNamesMCMCglmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the parameter names from an MCMCglmm object — paramNamesMCMCglmm","text":"","code":"if (FALSE) {   # a simple MCMCglmm model   if (require(MCMCglmm)) {      data(PlodiaPO)      m <- MCMCglmm(PO ~ 1, random = ~ FSfamily, data = PlodiaPO, verbose=FALSE, pr=TRUE)   }   # extract the parameter names   paramNamesMCMCglmm(m) }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranef.MCMCglmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract random effects from an MCMCglmm object — ranef.MCMCglmm","title":"Extract random effects from an MCMCglmm object — ranef.MCMCglmm","text":"Function designed extract random effects MCMCglmm model object. Can either extract samples random effects posteriors return posterior means.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranef.MCMCglmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract random effects from an MCMCglmm object — ranef.MCMCglmm","text":"","code":"# S3 method for MCMCglmm ranef(object, use = c(\"all\", \"mean\"), ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranef.MCMCglmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract random effects from an MCMCglmm object — ranef.MCMCglmm","text":"object MCMCglmm model object extract effects use character string indicating whether extract posterior samples mean posteriors. Defaults \"\". ... Arguments passed worker function.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranef.MCMCglmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract random effects from an MCMCglmm object — ranef.MCMCglmm","text":"matrix fixed effects","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranef.MCMCglmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract random effects from an MCMCglmm object — ranef.MCMCglmm","text":"","code":"if (FALSE) {   # a simple MCMCglmm model   data(PlodiaPO)   m <- MCMCglmm(PO ~ 1, random= ~ FSfamily, data=PlodiaPO, pr=TRUE, verbose=FALSE)    # only extract average fixed effects   head(ranef(m, use = \"mean\"))    # histogram of posterior samples of fixed effects   hist(ranef(m)[1, ])   # matches the mean   rowMeans(ranef(m)[1:6, ]) }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranefLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the levels of factors used for random effects in MCMCglmm objects — ranefLevels","title":"Extract the levels of factors used for random effects in MCMCglmm objects — ranefLevels","text":"Extract levels factors used random effects MCMCglmm objects","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranefLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the levels of factors used for random effects in MCMCglmm objects — ranefLevels","text":"","code":"ranefLevels(object, data, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranefLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the levels of factors used for random effects in MCMCglmm objects — ranefLevels","text":"object MCMCglmm model object data dataset used model ... currently used","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/ranefLevels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the levels of factors used for random effects in MCMCglmm objects — ranefLevels","text":"","code":"if (FALSE) {   # a simple MCMCglmm model   data(PlodiaPO)   m <- MCMCglmm(PO ~ 1, random = ~ FSfamily, data = PlodiaPO, verbose=FALSE)    # extract the random effects levels   ranefLevels(m, PlodiaPO) }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. broom augment, glance, tidy","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/rstanarm_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for an rstanarm model — rstanarm_tidiers","title":"Tidying methods for an rstanarm model — rstanarm_tidiers","text":"methods tidy estimates rstanarm fits (stan_glm, stan_glmer, etc.) summary.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/rstanarm_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for an rstanarm model — rstanarm_tidiers","text":"","code":"# S3 method for stanreg tidy(   x,   effects = \"fixed\",   conf.int = FALSE,   conf.level = 0.9,   conf.method = c(\"quantile\", \"HPDinterval\"),   ... )  # S3 method for stanreg glance(x, looic = FALSE, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/rstanarm_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for an rstanarm model — rstanarm_tidiers","text":"x Fitted model object rstanarm package. See stanreg-objects. effects character vector including one \"fixed\", \"ran_vals\", \"ran_pars\". See Value section details. conf.int TRUE columns lower (conf.low) upper (conf.high) bounds 100*prob% posterior uncertainty intervals included. See posterior_interval details. conf.level See posterior_interval. conf.method method computing confidence intervals (\"quantile\" \"HPDinterval\") ... glance, looic=TRUE, optional arguments loo.stanfit. looic LOO Information Criterion (related info) included? See loo.stanfit details. (can slow models fit large datasets.)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/rstanarm_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying methods for an rstanarm model — rstanarm_tidiers","text":"tidying methods return data.frame without rownames. structure depends method chosen. effects=\"fixed\" (default), tidy.stanreg returns one row coefficient, three columns: term name corresponding term model. estimate point estimate coefficient (posterior median). std.error standard error point estimate based mad. See Uncertainty estimates section print.stanreg details. models group-specific parameters (e.g., models fit stan_glmer), setting effects=\"ran_vals\"selects group-level parameters instead non-varying regression coefficients. Addtional columns added indicating level group. Specifying effects=\"ran_pars\" selects standard deviations (certain models) correlations group-level parameters. Setting effects=\"auxiliary\" select parameters included options. particular parameters depend rstanarm modeling function used fit model. example, models fit using stan_glm overdispersion parameter included effects=\"aux\", stan_lm auxiliary parameters include residual SD, R^2, log(fit_ratio), etc. glance returns one row columns algorithm algorithm used fit model. pss posterior sample size (except models fit using   optimization). nobs number observations used fit model. sigma square root estimated residual variance,   applicable. applicable (e.g., binomial GLMs), sigma   given value 1 returned object. looic=TRUE, following additional columns also   included: looic LOO Information Criterion. elpd_loo expected log predictive density (elpd_loo = -2 *   looic). p_loo effective number parameters.","code":""},{"path":[]},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/rstanarm_tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for an rstanarm model — rstanarm_tidiers","text":"","code":"if (require(\"rstanarm\")) { if (FALSE) { #'     ## original model     fit <- stan_glmer(mpg ~ wt + (1|cyl) + (1+wt|gear), data = mtcars,                       iter = 300, chains = 2)   } ## load example data fit <- readRDS(system.file(\"extdata\", \"rstanarm_example.rds\", package=\"broom.mixed\"))    # non-varying (\"population\") parameters   tidy(fit, conf.int = TRUE, prob = 0.5)   tidy(fit, conf.int = TRUE, conf.method = \"HPDinterval\", prob = 0.5)    # hierarchical sd & correlation parameters   tidy(fit, effects = \"ran_pars\")    # group-specific deviations from \"population\" parameters   tidy(fit, effects = \"ran_vals\")    # glance method    glance(fit)   if (FALSE) {      glance(fit, looic = TRUE, cores = 1)   } } ## if require(\"rstanarm\") #> Loading required package: rstanarm #> Warning: there is no package called ‘rstanarm’"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/stdranef.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract standard deviation of ","title":"Extract standard deviation of ","text":"Function designed extract standard deviation random effects MCMCglmm model object. Note posterior distribution (co)variance matrices. based posterior distribution random effects. also means requires pr=TRUE set model information saved. Can optionally return standard deviation random effects back transforming response metric. Currently probabilities, ordinal family models (family=\"ordinal\").","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/stdranef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract standard deviation of ","text":"","code":"stdranef(object, which, type = c(\"lp\", \"response\"), ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/stdranef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract standard deviation of ","text":"object MCMCglmm model object extract effects list random effects extract numeric positions two numbers list, effects simulataneous. type character string indicating whether calculate standard deviation linear predictor metric, ‘lp’ response, ‘response’. ... currently used.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/stdranef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract standard deviation of ","text":"list class postMCMCglmmRE means (M) individual estimates (Data)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/stdranef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract standard deviation of ","text":"","code":"if (FALSE) {   # a simple MCMCglmm model   data(PlodiaPO)   PlodiaPO <- within(PlodiaPO, {     PO2 <- cut(PO, quantile(PO, c(0, .33, .66, 1)))     plate <- factor(plate)   })    m <- MCMCglmm(PO2 ~ 1, random = ~ FSfamily + plate,     family = \"ordinal\", data = PlodiaPO,     prior = list(       R = list(V = 1, fix = 1),       G = list(         G1 = list(V = 1, nu = .002),         G2 = list(V = 1, nu = .002)       )     ), verbose=FALSE, thin=1, pr=TRUE)    # summary of the model   summary(m)    # examples of extracting standard deviations of   # different random effects on the linear predictor metric   # or after transformation to probabilities (only for ordinal)   stdranef(m, which = list(1), type = \"lp\")   stdranef(m, which = list(2), type = \"lp\")   stdranef(m, which = list(1, 2, c(1, 2)), type = \"lp\")   stdranef(m, type = \"lp\")    ## error because no 3rd random effect   #stdranef(m, which = list(1, 2, 3), type = \"lp\")    stdranef(m, which = list(\"FSfamily\", \"plate\"), type = \"lp\")    # mean standard deviations on the probability metric   # also the full distributions, if desired in the Data slot.   res <- stdranef(m, type = \"response\")   res$M # means   hist(res$Data$FSfamily[, 1]) # histogram }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.TMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying methods for TMB models — tidy.TMB","title":"Tidying methods for TMB models — tidy.TMB","text":"Tidying methods TMB models","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.TMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying methods for TMB models — tidy.TMB","text":"","code":"# S3 method for TMB tidy(   x,   effects = c(\"fixed\", \"random\"),   conf.int = FALSE,   conf.level = 0.95,   conf.method = c(\"wald\", \"uniroot\", \"profile\"),   ... )"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.TMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying methods for TMB models — tidy.TMB","text":"x object class TMB (may need use class(obj) <- \"TMB\" results TMB) effects effects returned? conf.int whether include confidence interval conf.level confidence level CI conf.method method computing confidence intervals ... additional arguments passed confint function (tmbroot, tmbprofile)","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.TMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidying methods for TMB models — tidy.TMB","text":"","code":"if (require(\"TMB\")) {      if (FALSE) {        runExample(\"simple\",thisR=TRUE)        class(obj) <- \"TMB\"        tidy(obj,conf.int=TRUE,conf.method=\"wald\")     }     if (FALSE) tidy(obj,conf.int=TRUE,conf.method=\"uniroot\")     if (FALSE) tidy(obj,conf.int=TRUE,conf.method=\"profile\") } #> Loading required package: TMB #> Warning: there is no package called ‘TMB’"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.varFunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy variance structure for the nlme package. — tidy.varFunc","title":"Tidy variance structure for the nlme package. — tidy.varFunc","text":"Returns tibble following columns: grouptype varFunc, along right hand side formula   parentheses e.g. \"varExp(age | Sex)\". termterms included formula variance model, specifically   names coefficients.  value fixed, appended   \" ; fixed\". estimateestimated coefficient estimatedThis column included parameters fixed.   TRUE parameter estimated FALSE parameter fixed.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.varFunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy variance structure for the nlme package. — tidy.varFunc","text":"","code":"# S3 method for varFunc tidy(x, ...)  # S3 method for varComb tidy(x, ...)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.varFunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy variance structure for the nlme package. — tidy.varFunc","text":"x object class varFunc, used weights argument nlme package ... Ignored","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.varFunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy variance structure for the nlme package. — tidy.varFunc","text":"varFunc uninitialized parameters,   function return empty tibble.  Otherwise, return tibble   names described details section.","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/tidy.varFunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy variance structure for the nlme package. — tidy.varFunc","text":"","code":"if (FALSE) { if (require(\"nlme\")) { ChickWeight_arbitrary_group <- datasets::ChickWeight ChickWeight_arbitrary_group$group_arb_n <-   1 + (     as.integer(ChickWeight_arbitrary_group$Chick) >     median(as.integer(ChickWeight_arbitrary_group$Chick))   ) ChickWeight_arbitrary_group$group_arb <- c(\"low\", \"high\")[ChickWeight_arbitrary_group$group_arb_n]  fit_with_fixed <-   lme(     weight ~ Diet * Time,     random = ~Time | Chick,     data =ChickWeight_arbitrary_group,     weights=varIdent(fixed=c(\"low\"=5), form=~1|group_arb)   ) # Show all parameters tidy(fit_with_fixed) # Exclude fixed parameters tidy(fit_with_fixed) %>%   filter(across(any_of(\"estimated\"), ~.x)) } }"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/unrowname.html","id":null,"dir":"Reference","previous_headings":"","what":"strip rownames from an object — unrowname","title":"strip rownames from an object — unrowname","text":"strip rownames object","code":""},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/unrowname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"strip rownames from an object — unrowname","text":"","code":"unrowname(x)"},{"path":"https://jpiaskowski.github.io/broom.mixed/dev/reference/unrowname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"strip rownames from an object — unrowname","text":"x data frame","code":""}]
